{"ast":null,"code":"var _jsxFileName = \"/home/programming/Documentos/fullstack/part7/country/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport apiCountryService from './services/apiCountryService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useField = type => {\n  _s();\n\n  const [value, setValue] = useState('');\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return {\n    type,\n    value,\n    onChange\n  };\n};\n\n_s(useField, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\nconst useCountry = name => {\n  _s2();\n\n  const [country, setCountry] = useState(null);\n  useEffect(async () => {\n    let fetchedCountry = await apiCountryService.getCountryByFullName(nameInput.value);\n    if (fetchedCountry.length > 0) setCountry(fetchedCountry);else setCountry(null);\n  }, [name]);\n  return country;\n};\n\n_s2(useCountry, \"9L3Zg5FcscnsQ/D6FObYQh4sBQ4=\");\n\nconst Country = ({\n  country\n}) => {\n  if (!country) {\n    return null;\n  }\n\n  if (!country.found) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"not found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [country.data.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"capital \", country.data.capital, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"population \", country.data.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.data.flag,\n      height: \"100\",\n      alt: `flag of ${country.data.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Country;\n\nconst App = () => {\n  _s3();\n\n  const nameInput = useField('text');\n  const [name, setName] = useState('');\n  const country = useCountry(name);\n\n  const fetch = async e => {\n    e.preventDefault();\n    setName(nameInput.value);\n    /* let fetchedCountry = await apiCountryService.getCountryByFullName(nameInput.value)\n    console.log(fetchedCountry)\n    if( fetchedCountry.length > 0 )\n      setCountry */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Country, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(App, \"khjVtbRcos+8++AZ+yLoPulIuQg=\", false, function () {\n  return [useField, useCountry];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/programming/Documentos/fullstack/part7/country/src/App.js"],"names":["React","useState","useEffect","apiCountryService","useField","type","value","setValue","onChange","event","target","useCountry","name","country","setCountry","fetchedCountry","getCountryByFullName","nameInput","length","Country","found","data","capital","population","flag","App","setName","fetch","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport apiCountryService from './services/apiCountryService'\n\nconst useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}\n\nconst useCountry = (name) => {\n  const [country, setCountry] = useState(null)\n\n  useEffect(async () => {\n    let fetchedCountry =  await apiCountryService.getCountryByFullName(nameInput.value)\n    if( fetchedCountry.length > 0 )    \n      setCountry(fetchedCountry)\n    else\n      setCountry(null)\n  }, [name])\n\n  return country\n}\n\nconst Country = ({ country }) => {\n  if (!country) {\n    return null\n  }\n\n  if (!country.found) {\n    return (\n      <div>\n        not found...\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h3>{country.data.name} </h3>\n      <div>capital {country.data.capital} </div>\n      <div>population {country.data.population}</div> \n      <img src={country.data.flag} height='100' alt={`flag of ${country.data.name}`}/>  \n    </div>\n  )\n}\n\nconst App = () => {\n  const nameInput = useField('text')\n  const [name, setName] = useState('')\n  const country = useCountry(name)\n\n  const fetch = async (e) => {\n    e.preventDefault()\n    setName(nameInput.value)\n\n    /* let fetchedCountry = await apiCountryService.getCountryByFullName(nameInput.value)\n    console.log(fetchedCountry)\n    if( fetchedCountry.length > 0 )\n      setCountry */\n  }\n\n  return (\n    <div>\n      <form onSubmit={fetch}>\n        <input {...nameInput} />\n        <button>find</button>\n      </form>\n\n      <Country country={country} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}